#include<iostream>
using namespace std;
//维护函数，维护堆为最大堆
void weihu(int a[],int root,int low,int high)
{
    int l=2*root+1;
    int r=2*root+2;
    int largest=0;
    if(l<=high&&a[l]>a[root]) largest=l;
    else largest=root;
    if(r<=high&&a[r]>a[largest]) largest=r;
    if(largest!=root)
    {
        swap(a[root],a[largest]);
        weihu(a,largest,low,high);
    }
}
//建堆函数
void Build(int a[],int n)
{
    for(int i=n/2-1;i>=0;i--)
    {
        weihu(a,i,0,n-1);
    }
}
//堆排序函数
void Sort(int a[],int n)
{
    Build(a,n);
    for(int i=n-1;i>=0;i--)
    {
        swap(a[0],a[i]);
        weihu(a,0,0,i-1);
    }
}
int main()
{
    int a[]={3,2,6,4,8,6,5,3,-2,-2,9,0};
    for(int i=0;i<sizeof(a)/sizeof(int);i++)
        cout<<a[i]<<" ";
    cout<<endl;
    Sort(a,sizeof(a)/sizeof(int));
    for(int i=0;i<sizeof(a)/sizeof(int);i++)
        cout<<a[i]<<" ";
    return 0;
}
